name: Coverity FullClient PullRequest Analysis
on:
  pull_request:
    branches: [ master, main ]

jobs:
  pr-scan:
    runs-on: self-hosted
    
    env:
      COVERITY_CONNECT_URL: ${{ secrets.COVERITY_CONNECT_LOCAL_URL }}
      COVERITY_LOCAL_IDIR: /tmp/coverity/${GITHUB_REPOSITORY##*/}/idir
      COVERITY_CONNECT_AUTHENTICATION_KEY: ${{ secrets.COVERITY_CONNECT_LOCAL_AUTHENTICATION_KEY }}
      COVERITY_CONNECT_AUTHENTICATION_FILE: coverity-connect.token

    steps:
      - uses: actions/checkout@v3

      - name: Get Pull Request Changeset
        if: ${{ github.event_name == 'pull_request' }}
        id: changeset
        uses: tj-actions/changed-files@v35.8.0
        with:
          files_ignore: |
            .github
            target

      - name: Check presence in emit
        if: steps.changeset.outputs.any_changed == 'true'
        run: |
          echo ========== Changed Files ====================
          echo ${{ steps.changeset.outputs.all_changed_files }}
          echo =============================================
          for file in ${{ steps.changeset.outputs.all_changed_files }}; do
            cov-manage-emit --dir ${COVERITY_LOCAL_IDIR} -tu "file('${file}')" list 
          done


      - name: Coverity Scan (Incremental analysis)
        if: ${{github.event_name == 'pull_request'}} && steps.changeset.outputs.any_changed == 'true'
        run: |
          ## Store access token in auth-key-file.
          echo ${{ secrets.COVERITY_CONNECT_LOCAL_AUTHENTICATION_KEY }} | base64 -d > ${COVERITY_CONNECT_AUTHENTICATION_FILE}
          chmod go-rwx ${COVERITY_CONNECT_AUTHENTICATION_FILE}
          ## Create lower case stream name.
          COVERITY_CONNECT_STREAM_NAME=${GITHUB_REPOSITORY##*/}-${{ github.base_ref }}
          COVERITY_CONNECT_STREAM_NAME=${COVERITY_CONNECT_STREAM_NAME,,}

          COVERITY_LOCAL_IDIR=/tmp/coverity/${GITHUB_REPOSITORY##*/}/idir
          echo Caching incremental results in ${COVERITY_LOCAL_IDIR}

          #coverity capture --dir ${COVERITY_LOCAL_IDIR}

          cov-run-desktop --dir ${COVERITY_LOCAL_IDIR} \
            --strip-path `pwd` \
            --url ${{ secrets.COVERITY_CONNECT_LOCAL_URL }} \
            --stream $COVERITY_CONNECT_STREAM_NAME \
            --reference-snapshot latest \
            --present-in-reference false \
            --ignore-uncapturable-inputs true \
            --json-output-v7 coverity-results.json \
            ${{ steps.changeset.outputs.all_changed_files }}

          echo =========== c-r-d results ====================
          cat coverity-results.json
          echo ==============================================

      - name: Coverity Pull Request Feedback
        if: steps.changeset.outputs.any_changed == 'true'
        uses: synopsys-sig/coverity-report-output-v7-json@v0.1.0
        with:
          # The following parameters are REQUIRED
          json-file-path: ./coverity-results.json
          github-token: ${{ secrets.GITHUB_TOKEN }}
          # If the following optional parameters are specified, the results from the JSON output will be
          # compared to the baseline issues in the specified project, and only NEW issues will be reported
          # in the pull request.
          coverity-url: ${{ secrets.COVERITY_CONNECT_LOCAL_URL }}
          #coverity-project-name: ${{ github.event.repository.name }}
          coverity-project-name: SecurityWebShop
          coverity-username: admin
          coverity-password: coverity

      - name: Archive Coverity File Listing
        if: steps.changeset.outputs.any_changed == 'true'
        uses: actions/upload-artifact@v3
        with:
          name: coverity-capture-file-listing
          path: coverity-files-to-scan.txt

      - name: Archive Coverity Scan Info
        if: steps.changeset.outputs.any_changed == 'true'
        uses: actions/upload-artifact@v3
        with:
          name: coverity-summary
          path: |
            idir/output/summary.txt
            coverity-results.json